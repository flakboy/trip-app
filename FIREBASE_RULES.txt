rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
  	function isAuthenticated() {
      return request.auth != null;
    }

    function isAdmin() {
      return isAuthenticated()
      && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.roles.admin == true
      ;
    }
    
    function isManager() {
      return isAuthenticated() &&
      get(/databases/$(database)/documents/users/$(request.auth.uid)).data.roles.manager == true;
    }
    
    function isBanned(uid) {
    	return get(/databases/$(database)/documents/users/$(uid)).data.isBanned == true;
    }

    match /users/{userId} {
      allow read: if true;
      allow write: if true;
    }

	match /trips/{trip} {
    	allow read: if true;
      allow write: if isAuthenticated() && (isAdmin() || isManager());
    }
    
    match /history/{entry} {
    	allow read: if isAuthenticated();
      allow write: if isAuthenticated() && request.auth.uid == request.resource.data.userId;
    }
    
    match /reviews/{review} {
    	allow read: if isAuthenticated();
      allow write: if isAuthenticated() && !isBanned(request.auth.uid);
    }
  
    match /{document=**} {
      allow read: if false;
      allow write: if false;
    }
  }
}